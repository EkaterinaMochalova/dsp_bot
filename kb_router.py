# kb_router.py
from aiogram import Router, F, types
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder

from kb import kb_answer, load_kb_intents

kb_router = Router(name="kb")

# ‚îÄ‚îÄ /kb_reload: –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π KB –∏–∑ kb_intents.yml
@kb_router.message(Command("kb_reload"))
async def kb_reload(m: types.Message):
    try:
        await load_kb_intents()
        await m.answer("üîÑ KB –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞.")
    except Exception as e:
        await m.answer(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å KB: {e}")

# ‚îÄ‚îÄ –ê–≤—Ç–æ-–ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–∞ –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç (–Ω–µ –∫–æ–º–∞–Ω–¥—ã)
#     –§–∏–ª—å—Ç—Ä –¥–æ–ø–æ–ª–Ω–∏–º ¬´–∞–Ω—Ç–∏-–ø–µ—Ä–µ—Ö–≤–∞—Ç–æ–º¬ª –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ—Ä–∞–∑ –±–æ—Ç–∞.
_operational_prefixes = (
    "–ø–æ–¥–±–µ—Ä–∏", "—Å–ø–ª–∞–Ω–∏—Ä—É–π", "–Ω–∞–π–¥–∏", "—Ä—è–¥–æ–º", "–≤ —Ä–∞–¥–∏—É—Å–µ", "—ç–∫—Å–ø–æ—Ä—Ç",
    "–ø–æ—Å—Ç–∞–≤—å", "—É—Å—Ç–∞–Ω–æ–≤–∏", "–∑–∞–¥–∞–π", "—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–π", "–æ–±–Ω–æ–≤–∏", "–ø—Ä–æ–≥–Ω–æ–∑",
    "–æ–∫–æ–ª–æ", "near", "help", "–∫–æ–º–∞–Ω–¥—ã", "format=", "owner=", "city=", "budget="
)

@kb_router.message(F.text, ~F.text.regexp(r"^/"), ~F.via_bot)
async def kb_matcher(m: types.Message):
    text = (m.text or "").strip()
    if not text:
        return

    low = text.lower()

    # –ù–µ –º–µ—à–∞–µ–º –≤–∞—à–∏–º NLU/–∫–æ–º–∞–Ω–¥–∞–º: –µ—Å–ª–∏ —Ñ—Ä–∞–∑–∞ ¬´–æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è¬ª ‚Äî –≤—ã—Ö–æ–¥–∏–º.
    if any(low.startswith(p) for p in _operational_prefixes):
        return

    # –ü–æ–ø—Ä–æ—Å–∏–º KB –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    try:
        items = await kb_answer(text, allow_notion=True)
    except Exception as e:
        # –¢–∏—Ö–∏–π —Ñ–µ–π–ª ‚Äî —á—Ç–æ–±—ã –Ω–µ –ø–∞–¥–∞—Ç—å –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å —Å–µ—Ç—å—é/–Ω–æ—É—à–µ–Ω–æ–º
        items = []
        # –ú–æ–∂–Ω–æ –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å, –µ—Å–ª–∏ –µ—Å—Ç—å –ª–æ–≥–≥–µ—Ä:
        # logging.exception("KB lookup failed: %s", e)

    if not items:
        return

    # –°–æ–±–µ—Ä—ë–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    kb = InlineKeyboardBuilder()
    for it in items:
        title = (it.get("title") or "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è").strip()
        url = (it.get("url") or "").strip()
        if not url:
            continue
        kb.button(text=title, url=url)
    kb.adjust(1)  # –ø–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Å—Ç—Ä–æ–∫–µ

    await m.answer(
        "üßæ –ü–æ—Ö–æ–∂–µ, —ç—Ç–æ –∏–∑ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –í–æ—Ç —á—Ç–æ –Ω–∞—à–ª–æ—Å—å:",
        reply_markup=kb.as_markup()
    )