# kb_router.py
import re
from aiogram import Router, F, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from kb import kb_answer, load_kb_intents

kb_router = Router(name="kb")

@kb_router.message(Command("kb_reload"))
async def kb_reload(m: types.Message):
    try:
        await load_kb_intents()
        await m.answer("üîÑ KB –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞.")
    except Exception as e:
        await m.answer(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å KB: {e}")

# --- –í–ê–ñ–ù–û: –∏—Å–∫–ª—é—á–∞–µ–º ¬´–æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ¬ª —Ñ—Ä–∞–∑—ã –∏–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏ KB —Å—Ä–∞–∑—É –≤ —Ñ–∏–ª—å—Ç—Ä–µ
# —á—Ç–æ–±—ã –æ–Ω–∏ –ø—Ä–æ—à–ª–∏ –¥–∞–ª—å—à–µ –≤ nlu_router –∏/–∏–ª–∏ —Ç–≤–æ–π –æ—Å–Ω–æ–≤–Ω–æ–π router.
OP_TEXT_RE = (
    r"(?i)^\s*(–ø–æ–¥–±–µ—Ä–∏|–≤—ã–±–µ—Ä–∏|—Å–ø–ª–∞–Ω–∏—Ä—É–π|–ø–ª–∞–Ω|forecast|–ø—Ä–æ–≥–Ω–æ–∑|"
    r"near|pick_city|pick_at|—Ä—è–¥–æ–º|–≤\s+—Ä–∞–¥–∏—É—Å–µ|—ç–∫—Å–ø–æ—Ä—Ç|–≤—ã–≥—Ä—É–∑–∏|csv|xlsx|—Ç–∞–±–ª–∏—Ü–∞|"
    r"—Ñ–æ—Ç–æ–æ—Ç—á[–µ—ë]—Ç|shots)\b"
)

@kb_router.message(
    F.text,
    ~F.text.regexp(r"^/"),
    ~F.via_bot,
    ~F.text.regexp(OP_TEXT_RE)  # ‚Üê –≤–æ—Ç —ç—Ç–æ –∫–ª—é—á–µ–≤–æ–µ
)
async def kb_matcher(m: types.Message):
    q = (m.text or "").strip()
    items = await kb_answer(q, allow_notion=True)
    if not items:
        return
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=(it.get("title") or "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"), url=it["url"])]
            for it in items if it.get("url")
        ]
    )
    await m.answer("üßæ –ü–æ—Ö–æ–∂–µ, —ç—Ç–æ –∏–∑ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –í–æ—Ç —á—Ç–æ –Ω–∞—à–ª–æ—Å—å:", reply_markup=kb)